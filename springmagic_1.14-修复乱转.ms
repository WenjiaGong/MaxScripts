--------------------------Ver.  1.1 Fixed    Author : Si-Chung Yuan 2017.9   江湖夜雨十年灯  2025.6  修复乱转，但仍会概率欧拉 --------------------------------------------------------------
(
vposCA = attributes vipos
(
	parameters main 
	(
	 	vpos 		type:#point3Tab tabSizeVariable:true animatable:false
	)	

)
sprboneCA = attributes sprbTM
(
	parameters main
	(
		boneTM	type:#matrix3
	)	
)
local framestart, frameEnd
local simbones = #(), bone_TM = #(), preTimebone_TM = #(), prePos = #(), bcnt = #()
rollout springMagic_rol "Spring Magic V1.14 Fixed" width:230 height:264
(
	spinner 'delaysp' "Spring" pos:[13,7] width:45 height:16 range:[0.01,1,0.3] type:#float scale:0.01 align:#left
	spinner 'scaleMotion' "Scale Motion" pos:[105,7] width:44 height:16 range:[0,999,1] type:#float scale:0.01 align:#left
 
	spinner 'subs' "Subs" pos:[13,32] width:49 height:16 range:[1,30,1] type:#integer align:#left
	spinner 'upspring' "XSpring" pos:[129,32] width:50 height:16 range:[0.1,1,0.3] type:#float scale:0.01 align:#left
 
	spinner 'bnum' "Bones num" pos:[13,57] width:40 height:16 range:[0,1000,50] type:#integer align:#left
	checkbox 'loops' "Loops" pos:[172,57] width:50 height:20 type:#integer range:[0,100,0] align:#left
	groupBox 'grp1' "Bone Pose" pos:[4,82] width:222 height:44 align:#left
	button 'pasteRp' "Paste" pos:[13,100] width:50 height:20 toolTip:"Select first bone" align:#left
	button 'setRp' "Set" pos:[68,100] width:50 height:20 toolTip:"Select first bone" align:#left
 
	button 'Stretch' "straight" pos:[123,100] width:50 height:20 align:#left
	groupBox 'grp2' "KeyRange" pos:[4,131] width:222 height:44 align:#left
	radiobuttons 'a1' "" pos:[8,149] width:134 height:16 labels:#("Active", "Custom") columns:2 align:#left
	spinner 'aframeStart' "" pos:[123,149] width:40 height:16 range:[-10000,100000,1] type:#integer align:#left
 
	spinner 'aframeEnd' "To" pos:[168,149] width:41 height:16 range:[0,100000,10] type:#integer align:#left
	groupBox 'grp3' "应用栏：仍会出现欧拉，骨骼不会消失" pos:[4,180] width:222 height:44 align:#left
	button 'applybone' "Bake" pos:[13,198] width:60 height:20 toolTip:"Select first bone" align:#left
 
	progressBar 'doit_prog' "" pos:[103,203] width:120 height:15 color:(color 255 0 0) align:#left
	label 'lab_aut' "原作:Si-Chung Yuan (修复乱转)     修改：江湖夜雨十年灯" pos:[15,229] width:206 height:33 align:#left
	
	fn setStartEndFrame = (
		if a1.state == 1 then (
			framestart = animationRange.start-1f
			frameEnd = animationRange.end-1f
		) else (
			framestart = aframeStart.value-1f as time
			frameEnd = aframeEnd.value-1f as time
		)
	)

	fn getBoneChain bone = (
		
		local bonechain = #()
		local bonetype = classof bone
		local num = 1

		if bone.parent == undefined do ( messageBox (((bone.name as string)+"must have parent!")) ; continue)

		local parnode = bone.parent
		while bone!=undefined do (
			bonechain[num] = bone
			childfind = false
			if bone.children.count == 0 or num>bnum.value then exit
			else (
				for c in bone.children do
					if  classof c == bonetype or classof c == Dummy then (bone = c;num += 1 ;childfind = true;exit)
					else continue
				if childfind == false do bone = undefined
			)
		)----end while
		--format "bonechain = %\n" bonechain
		append simBones bonechain

		local pTM = parnode.transform
		local preTM = #()
		local bTM = #()

		for j in 1 to bonechain.count do (
			if classof bonechain[j] == Dummy and classof bonechain[j].controller == BipSlave_Control then(
				for i = 1 to (custAttributes.count bonechain[j]) do (
					a = CustAttributes.get bonechain[j] i
					if isProperty a "boneTM" do (
						CustAttributes.delete bonechain[j] i
						isDelete  = true
					)
				)
			)else
				if not isProperty bonechain[j] "boneTM" then 
				(
					CustAttributes.add bonechain[j] sprboneCA
					bonechain[j].boneTM = bonechain[j].transform * inverse bonechain[j].parent.transform
				)
			
			if isProperty bonechain[j] "boneTM" then
				append bTM bonechain[j].boneTM
			else
				append bTM (bonechain[j].transform * inverse bonechain[j].parent.transform)
			
			append preTM bonechain[j].transform
			
		)	
		if bonechain.count > 1 then
			append prePos bonechain[2].transform.pos
		else (
			bbox = nodeGetBoundingBox bonechain[1] bonechain[1].transform
			append prePos (bonechain[1].transform.pos + bonechain[1].transform.row1 * bbox[2].x)
		)
		
		-------------- 	Add End  -----------------------------------------------------------------------------------------
		if bnum.value >= bonechain.count do (
			if bonechain.count > 1 then (
				ltm = copy bTM[bTM.count]
				append bTM ltm
			)else (
				ltm = matrix3 1
				bbox = nodeGetBoundingBox bonechain[1] bonechain[1].transform
				ltm.pos = [bbox[2].x, 0 ,0]
				append bTM ltm
			)
			tm = ltm * bonechain[preTM.count].transform
			append preTM tm
		)
		
		if classof bonechain[bonechain.count] == Dummy and \
			classof bonechain[bonechain.count].controller == BipSlave_Control do
			bonechain.count = bonechain.count - 1
		if bonechain.count > bnum.value do bonechain.count = bnum.value

		append bcnt bTM.count
		----------------------------------------------------------------------------------------------------------
		
		append preTimebone_TM preTM
		append bone_TM bTM
	format "bTM.count=% preTM.count=% bonechain.count=%\n" bTM.count preTM.count bonechain.count	
	)
	
	
	
	on springMagic_rol open do
	(
			aframestart.value = animationRange.start
			aframeEnd.value = animationRange.end
		)
	on pasteRp pressed do
	(
			for bone in selection do (
				local bonetype = classof bone
				if superClassOf bone == shape do continue
				--if bonetype != Biped_Object do return root
				if bone.parent == undefined do return root
				local bones=#()
				local num = 1
				while bone!=undefined do (
					bones[num] = bone
					childfind = false
					if bone.children.count == 0 then exit
					else (
						for c in bone.children do
							if  classof c == bonetype or classof c == Dummy then (bone = c;num += 1 ;childfind = true;exit)
							else continue
						if childfind == false do bone = undefined
					)
				)
				
				for b in bones do 
					if isProperty b "boneTM" do (
						animate on
						(
							try (
								if classof b == CATBone then (
									b.transform = b.boneTM * b.parent.transform
								) else if classof b == Biped_Object then 
									biped.setTransform b #rotation (b.boneTM*b.parent.transform).rotation true
								else if classof b.controller != BipSlave_Control do 
									b.rotation.controller.value = b.boneTM.rotation
							) catch (
								format "Warning: Failed to paste pose for bone %\n" b.name
							)
						)
					)
			)----end for bone
		)
	on setRp pressed do
	(
		
			for obj in selection do (
	
				local objtype = classof obj
				if superClassOf obj != GeometryClass do continue
				if obj.parent == undefined do return root
				local bones=#()
				append bones obj
				
				while obj != undefined do (
					if keyboard.escPressed then exit
					isfind = false
					for c in obj.children do 
						if  classof c == objtype or classof c == Dummy then (
							append bones c
							obj = c
							isfind = true
							exit
						)else continue
					if not isfind do 
						obj = undefined
				)
	
				for b in bones do
					if classof b == objtype do (
						try (
							if not isProperty b "boneTM" do 
								CustAttributes.add b sprboneCA
						
							b.boneTM = b.transform*(inverse b.parent.transform)
						) catch (
							format "Warning: Failed to set reference pose for bone %\n" b.name
						)
					)
				
			)
		
		)
	on Stretch pressed do
(
		with undo on (
				
				for bone in selection do (
					if bone.children.count == 0 do return root
					bone = bone.children[1]
					bonetype = classof bone
					if superClassOf bone == shape do continue
					--if bonetype != BoneGeometry and bonetype != Biped_Object do return root
					if bone.parent == undefined do return root
					local bones=#()
					local num = 1
					while bone!=undefined do (
						bones[num] = bone
						childfind = false
						if bone.children.count == 0 then exit
						else (
							for c in bone.children do
								if  classof c == bonetype or classof c == Dummy then (bone = c;num += 1 ;childfind = true;exit)
								else continue
							if childfind == false do bone = undefined
						)
					)
					for b in bones do (
						try (
							if bonetype == Biped_Object then 
								biped.setTransform b #rotation b.parent.transform.rotation true
							else (
								c = copy b.parent.transform
								c.pos = b.transform.position
								b.transform = c
							)
						) catch (
							format "Warning: Failed to straighten bone %\n" b.name
						)
					)
				)
			)
	)
	on applybone pressed do
	with undo on (
			
		simbones=#()
	
		setStartEndFrame()
	
		-------------- Clear  array
		simBones = #()
		bone_TM = #()
		preTimebone_TM = #()
		prePos = #()
		bcnt = #()
		
		delay = delaysp.value
	
		for object in selection do 
			if superClassOf object == GeometryClass do 
				at time frameStart getBoneChain object
		
		
	-----------------------Start  to  calculate---------------
		loopsv = if loops.checked then 2 else 1 
		subframe = 1f/subs.value
		pv = 100.0/ loopsv / (frameEnd - framestart + 1)
		doit_prog.value = 0.0
		totalVal = 0
		for L = 1 to loopsv do (
			for t = framestart to frameEnd do (
				if keyboard.escPressed then exit
				currtTime = t
				for sf in 1 to subs.value do (
					currtTime += subframe
					for i in 1 to simbones.count do (
						currentPTM = at time currtTime simbones[i][1].parent.transform
						for j in 1 to simbones[i].count do (
							targetboneTM = bone_TM[i][j] * currentPTM
							currentPos  = if j==1 then prePos[i] else preTimebone_TM[i][j+1].pos
							tpos = targetboneTM.pos
							dot1 = dot (normalize preTimebone_TM[i][j].row1) (normalize targetboneTM.row1)
							if dot1 > 1 then dot1 = 1
							else if dot1 < -1 then dot1 = -1
							angX = acos(dot1)
							newTM1 = copy preTimebone_TM[i][j]
							vt1 = normalize (cross preTimebone_TM[i][j].row1 targetboneTM.row1)
							if angX >0.001 do rotate newTM1 (quat angX -vt1) 
							newTM1.pos = tpos
							dot2 = dot (normalize newTM1[2]) (normalize targetboneTM.row2)
							if dot2 > 1 then dot2 = 1
							else if dot2 < -1 then dot2 = -1
							angY1 = acos(dot2)
							ssvt = cross (normalize newTM1[2]) (normalize targetboneTM.row2)
							xaxisdelay = (upspring.value + ((simbones[i].count-j)/(simbones[i].count)*(1.0-upspring.value)) )
							angY1 = angY1 * xaxisdelay
							if dot ssvt targetboneTM.row1 >0 do angY1 = -angY1
							if abs angY1 >0.001 do rotate newTM1 (quat angY1 targetboneTM.row1) 
							newTM1.pos = tpos
							targetboneTM = copy newTM1
							tvector = normalize targetboneTM.row1
							cvector = normalize (currentPos - tpos)
							vt = normalize (cross cvector tvector)
							dot3 = dot (normalize cvector) (normalize tvector)
							if dot3 > 1 then dot3 = 1
							else if dot3 < -1 then dot3 = -1
							angel = acos(dot3)
							angel *= (1.0-delay)
							sangel = angel 
							if j == 1 do angel *= scaleMotion.value
							ttm = copy targetboneTM
							rotate targetboneTM (quat angel vt)
							if j == 1 do rotate ttm (quat sangel vt)
							targetboneTM.pos = tpos
							ttm.pos = tpos
							if L == loopsv and sf == subs.value do (
								animate on at time (t + 1f)
								(
									try (
										if classof simbones[i][j].controller == BipSlave_Control and classof simbones[i][j] != Dummy then
											biped.setTransform simbones[i][j] #rotation targetboneTM.rotation true
										else if classof simbones[i][j] == CATBone then
											simbones[i][j].transform = copy targetboneTM
										else 
											simbones[i][j].rotation.controller.value = targetboneTM.rotation * inverse currentPTM.rotation
									) catch (
										format "Warning: Failed to set transform for bone %\n" simbones[i][j].name
									)
								)
							)
							currentPTM = copy targetboneTM
							preTimebone_TM[i][j] = copy targetboneTM
							if j == 1 do 
								prePos[i] = bone_TM[i][j+1].pos * ttm
							preTimebone_TM[i][j+1].pos = bone_TM[i][j+1].pos * targetboneTM	
							
						)
					)
				)
				totalVal += pv
				if totalVal >= 20.0 do (
					doit_prog.value += totalVal
					totalVal = 0.0
				)
			)
		)
		doit_prog.value = 100.0
		)
)
createDialog springMagic_rol

)